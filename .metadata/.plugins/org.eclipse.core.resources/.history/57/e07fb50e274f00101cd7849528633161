package in.neelesh.online.shopping.controller;

import java.util.List;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import in.neelesh.online.shopping.dto.ProductCreateDto;
import in.neelesh.online.shopping.dto.ProductResponseDto;
import in.neelesh.online.shopping.entity.Product;
import in.neelesh.online.shopping.service.ProductService;
import in.neelesh.online.shopping.utils.SecurityUtils;
import lombok.RequiredArgsConstructor;

@RestController
@RequestMapping("/{realm}/product")
@RequiredArgsConstructor
public class ProductContoller {

	private final ProductService productService;

	@PostMapping(consumes = MediaType.MULTIPART_FORM_DATA_VALUE)
	public ResponseEntity<Product> createProduct(@RequestPart("productdto") ProductCreateDto productdto,
			@RequestPart("images") List<MultipartFile> images, @PathVariable String realm) {
		String storeManagerId = SecurityUtils.getCurrentUserIdSupplier.get();
		Product product = productService.createProduct(productdto, storeManagerId, images, realm);
		return ResponseEntity.status(HttpStatus.CREATED).body(product);
	}

	@GetMapping
	public ResponseEntity<List<ProductResponseDto>> getStoreManagerProducts(@PathVariable String realm) {
		String storeManagerId = SecurityUtils.getCurrentUserIdSupplier.get();
		List<ProductResponseDto> products = productService.getProductsByStoreManager(storeManagerId, realm);
		return ResponseEntity.ok(products);
	}
	
	@PutMapping(value = "/{productId}", consumes = MediaType.MULTIPART_FORM_DATA_VALUE)
	public ResponseEntity<Product> updateProduct(@PathVariable String realm, @PathVariable String productId,
			@RequestPart("productdto") ProductCreateDto productdto, @RequestPart("images") List<MultipartFile> images) {
		String storeManagerId = SecurityUtils.getCurrentUserIdSupplier.get();
		Product updatedProduct = productService.updateProduct(productId, productdto, storeManagerId, realm, images);
		return ResponseEntity.ok(updatedProduct);
	}
}
