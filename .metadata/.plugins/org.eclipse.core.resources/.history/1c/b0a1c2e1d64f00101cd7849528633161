package in.neelesh.online.shopping.controller;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import in.neelesh.online.shopping.dto.CartItemRequestDto;
import in.neelesh.online.shopping.dto.CartResponseDto;
import in.neelesh.online.shopping.service.CartService;
import in.neelesh.online.shopping.utils.SecurityUtils;
import jakarta.validation.Valid;
import lombok.RequiredArgsConstructor;

@RestController
@RequiredArgsConstructor
@RequestMapping("/{realm}/cart")
public class CartController {

	private final CartService cartService;

	@GetMapping
	public ResponseEntity<CartResponseDto> getCart(@PathVariable String realm) {
		String customerId = SecurityUtils.getCurrentUserIdSupplier.get();
		return ResponseEntity.ok(cartService.getCart(customerId, realm));
	}

	@PostMapping("/add")
	public ResponseEntity<CartResponseDto> addToCart(@PathVariable String realm,
			@Valid @RequestBody CartItemRequestDto dto) {
		String customerId = SecurityUtils.getCurrentUserIdSupplier.get();
		return ResponseEntity.ok(cartService.addItemToCart(customerId, realm, dto));
	}

	@PutMapping("/update")
	public ResponseEntity<CartResponseDto> updateItem(@PathVariable String realm,
			@Valid @RequestBody CartItemRequestDto dto) {
		String customerId = SecurityUtils.getCurrentUserIdSupplier.get();
		return ResponseEntity.ok(cartService.updateCartItem(customerId, realm, dto));
	}

	@DeleteMapping("/remove/{productId}")
	public ResponseEntity<CartResponseDto> removeItem(@PathVariable String realm, @PathVariable String productId) {
		String customerId = SecurityUtils.getCurrentUserIdSupplier.get();
		return ResponseEntity.ok(cartService.removeItemFromCart(customerId, realm, productId));
	}

	@DeleteMapping("/clear")
	public ResponseEntity<Void> clearCart(@PathVariable String realm) {
		String customerId = SecurityUtils.getCurrentUserIdSupplier.get();
		cartService.clearCart(customerId, realm);
		return ResponseEntity.noContent().build();
	}
}
